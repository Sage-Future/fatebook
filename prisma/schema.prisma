generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Forecast {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  comment    String?
  forecast   Decimal
  authorId   Int
  questionId Int
  profile    Profile  @relation(fields: [authorId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
}

model Question {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  comment    String?
  authorId   Int
  title      String     @db.VarChar(255)
  forecasts  Forecast[]
  resolve_at DateTime
  resolved   Boolean    @default(false)
  profile    Profile    @relation(fields: [authorId], references: [id])
  groups     Group[]
  pingedForResolution Boolean  @default(false)
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  email     String    @unique
  name      String?
  profiles  Profile[]
}

model Profile {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  groups    Group[]
  slackId   String?
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  forecasts Forecast[]
  questions Question[]
}

model Group {
  id          Int        @id @default(autoincrement())
  type        GroupType
  createdAt   DateTime   @default(now())
  name        String     @db.VarChar(255)
  slackTeamId String?
  questions   Question[]
  profiles    Profile[]
}

enum GroupType {
  WEB
  SLACK
}
